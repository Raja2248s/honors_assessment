pipeline {
    agent any

    tools {
        maven "maven"  // Ensure Maven is installed
    }

    environment {
        HOME = 'C:/Users/Acer'
        EC2_USER = 'ec2-user'
        EC2_HOST = 'ec2-54-183-202-197.us-west-1.compute.amazonaws.com'
        PEM_FILE_PATH = "C:/Users/Acer/Downloads/devops.pem"  // Path to your AWS PEM file
        JAR_NAME = 'honors_assesment-0.0.1-SNAPSHOT.jar'
    }

    stages {
        stage('Checkout') {
            steps {
                // Fetch Github Repository
                git branch: 'main', url: 'https://github.com/Raja2248s/honors_assessment.git'
            }
        }
        
        stage('Build') {
            steps {
                bat 'mvn clean install'  // Builds the project and generates JAR
            }
            post {
                success {
                    archiveArtifacts 'target/*.jar'
                }
            }
        }

        stage('Deploy') {
            steps {
                script {
                     try {
                // Debugging: Output to check the build directory and the JAR file
                echo "JAR File Path: target/${JAR_NAME}"

                // Test SSH Connectivity first (Check if you can SSH into the EC2 instance)
                echo "Testing SSH connectivity to EC2 instance..."
                bat "ssh -vvv -i \"${PEM_FILE_PATH}\" -o UserKnownHostsFile=\"C:/Users/Acer/.ssh/known_hosts\" -v ${EC2_USER}@${EC2_HOST} echo 'SSH connection successful!'"

                // Timing the SCP command
                echo "Starting SCP to EC2 instance..."
                def startTime = System.currentTimeMillis()
                def scpResult = bat(script: "scp -i \"${PEM_FILE_PATH}\" -o UserKnownHostsFile=\"C:/Users/Acer/.ssh/known_hosts\" -v target/${JAR_NAME} ${EC2_USER}@${EC2_HOST}:/home/ec2-user/", returnStatus: true)
                def endTime = System.currentTimeMillis()
                def timeTaken = (endTime - startTime) / 1000
                echo "SCP took ${timeTaken} seconds to complete."
                
                if (scpResult != 0) {
                    error "SCP command failed with exit code ${scpResult}"
                }

                // Check if the JAR file exists on EC2 after SCP
                echo "Verifying JAR file on EC2..."
                bat "ssh -i \"${PEM_FILE_PATH}\" -o UserKnownHostsFile=\"C:/Users/Acer/.ssh/known_hosts\" ${EC2_USER}@${EC2_HOST} ls -l /home/ec2-user/${JAR_NAME}"

                // Start the application on the EC2 server
                echo "Starting application on EC2 instance..."
                bat "ssh -i \"${PEM_FILE_PATH}\" -o UserKnownHostsFile=\"C:/Users/Acer/.ssh/known_hosts\" -v ${EC2_USER}@${EC2_HOST} java -jar /home/ec2-user/${JAR_NAME} >> /home/ec2-user/app.log 2>&1"
            } catch (Exception e) {
                echo "Deployment failed: ${e.getMessage()}"
            }
                }
            }
        }
    }

    post {
        success {
            archiveArtifacts 'target/*.jar'
            echo 'Deployment successful!'
        }
        failure {
            echo 'Build or deployment failed!'
        }
    }
}
